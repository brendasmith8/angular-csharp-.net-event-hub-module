@page "/events/{url}"
@inject IHtmlLocalizer<EventHubResource> L
@using System.Globalization
@using EventHub.Localization
@using EventHub.Web.Pages.Events
@using EventHub.Web.Pages.Events.Components.AttendeesArea
@using EventHub.Web.Pages.Events.Components.LocationArea
@using EventHub.Web.Pages.Events.Components.RegistrationArea
@using Microsoft.AspNetCore.Mvc.Localization
@model EventHub.Web.Pages.Events.DetailPageModel
<abp-row>
    <abp-column size-lg="_8" size-md="_6">
        <abp-card class="mb-3">
              @if (Model.Event.CoverImageContent is null)
              {
                  <img abp-card-image="Top" src="https://picsum.photos/seed/@Model.Event.Id.ToString()/400/160?blur=8" alt="@Model.Event.Title"/>
              }
              else
              {
                  <img abp-card-image="Top" style="max-height: 300px; min-height: 200px;" src="@($"data:image/png;base64,{Convert.ToBase64String(Model.Event.CoverImageContent)}")" alt="@Model.Event.Title"/>
              }
            <abp-card-body>
                <abp-card-title>
                    @if (Model.IsEventOwner)
                    {
                        <div class="row">
                            <div class="col-9">
                                <h2>@Model.Event.Title</h2>
                            </div>
                            <div class="col-3 text-right">
                                <a href="/event/edit/@Model.Event.Url" class="btn btn-primary text-white">@L["Edit"] <i class="far fa-edit"></i></a>
                            </div>
                        </div>
                    }
                    else
                    {
                        <h2>@Model.Event.Title</h2>
                    }
                </abp-card-title>
                <abp-card-subtitle>
                    @EventDateHelper.GetDateRangeText(Model.Event.StartTime, Model.Event.EndTime) <br/>
                    <span class="text-muted">@L["OrganizedBy"]</span> <a href="@Url.Page("/Organizations/Profile", new {name = Model.Event.OrganizationName})">@Model.Event.OrganizationDisplayName</a>
                    @if (!Model.Event.Language.IsNullOrWhiteSpace())
                    {
                        <p>@L["Language"]: <span class="text-muted"> @CultureInfo.GetCultureInfo(Model.Event.Language).EnglishName</span></p>
                    }
                </abp-card-subtitle>
                <abp-card-text class="mt-3">
                    @Model.Event.Description
                </abp-card-text>
            </abp-card-body>
        </abp-card>
    </abp-column>
    <abp-column size-lg="_4" size-md="_6">
        @await Component.InvokeAsync(typeof(RegistrationAreaViewComponent), new {eventId = Model.Event.Id})
        @await Component.InvokeAsync(typeof(AttendeesAreaViewComponent), new {eventId = Model.Event.Id})
        @await Component.InvokeAsync(typeof(LocationAreaViewComponent), new {eventId = Model.Event.Id})
    </abp-column>
</abp-row>
