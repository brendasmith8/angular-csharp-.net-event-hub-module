@page
@using System.Globalization
@using EventHub.Localization
@using EventHub.Web.Pages.Events.Components.EventsArea
@using EventHub.Web.Pages.Organizations.Components.OrganizationsArea
@using Microsoft.AspNetCore.Mvc.Localization
@using Volo.Abp.Timing
@using Volo.Abp.Users
@inject ICurrentUser CurrentUser
@inject IClock Clock
@inject IHtmlLocalizer<EventHubResource> L
@model EventHub.Web.Pages.Members.ProfileModel
<div class="container pt-4">
    <div class="row py-4">
        <div class="col-md-2">
            <div class="">
                <ul class="card list-group">
                    <div class="card-body">
                        <div class="text-center">
                            <div>
                                <div class="profile-pic">
                                    <div class="position-relative d-inline-block mx-auto">
                                        <img gravatar-email="@Model.User.Email" default-image="Wavatar" gravatar-size="80" class="avatar rounded-circle"/>
                                    </div>
                                </div>
                                @if (Model.User.Name != null && Model.User.Surname != null)
                                {
                                    <h4 class="m-0 mt-4">@Model.User.Name @Model.User.Surname</h4>
                                }
        
                            </div>
                            <div class="mt-4">
                                <small class="text-muted text-uppercase">UserName</small>
                                <h4 class="m-0">@Model.User.UserName</h4>
                            </div>

                            <div class="mt-4">
                                <small class="text-muted text-uppercase">Registration Date</small>
                                <h5 class="m-0">@Model.User.CreationTime.ToString(CultureInfo.CurrentUICulture.DateTimeFormat.ShortDatePattern)</h5>
                            </div>
                        </div>
                    </div>
                </ul>
            </div>
        </div>
        <div class="col-md-10">
            <ul class="nav nav-tabs profile-nav" id="profileTab">
                <li class="nav-item">
                    <a href="#Organizations" class="nav-link active" data-toggle="tab">Organizations</a>
                </li>
                <li class="nav-item">
                    <a href="#AttendedEvents" class="nav-link" data-toggle="tab">Attended Events</a>
                </li>
                <li class="nav-item">
                    <a href="#UpcomingEvents" class="nav-link" data-toggle="tab">Upcoming Events</a>
                </li>
            </ul>
            <div class="tab-content profile-content py-4">
                <div id="Organizations" class="tab-pane fade show active">
                    <div class="row">
                        <div class="col">
                            <div class="card">
                                <div class="card-body" style="min-height: 496px">
                                    <div>
                                        <div class="row mb-4">
                                            <div class="col-8">
                                                <h3>
                                                    Ownered Organizations
                                                </h3>
                                            </div>
                                            @if (CurrentUser.IsAuthenticated)
                                            {
                                                @if (CurrentUser.Id == Model.User.Id)
                                                {
                                                    <div class="col-4 text-right">
                                                        <a abp-button="Primary" size="Small" href="@Url.Page("/Organizations/New")">@L["CreateAnOrganization"]</a>
                                                    </div>       
                                                }
                                            }
                                        </div>
                                            <partial name="~/Pages/Organizations/Components/OrganizationsArea/_organizationListSection.cshtml" model="@Model.Organizations"/>
                                        </div>
                                    <div>
                                        <h3 class="mb-4">Membership Organizations</h3>
                                        @await Component.InvokeAsync(typeof(OrganizationsAreaViewComponent), new
                                        {
                                            registeredUserId = Model.User.Id,
                                            maxResultCount = 6
                                        })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="AttendedEvents" class="tab-pane fade">
                    <div class="row">
                        <div class="col">
                            <div class="card">
                                <div class="card-body" style="min-height: 496px">
                                    <h3 class="mb-4">Attended Events</h3>
                                    <div class="past-events">
                                        @await Component.InvokeAsync(typeof(EventsAreaViewComponent), new
                                        {
                                            maxDate = Clock.Now.ClearTime(),
                                            registeredUserId = Model.User.Id,
                                            maxResultCount = 6,
                                            skipCount = 0
                                        })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="UpcomingEvents" class="tab-pane fade">
                    <div class="row">
                        <div class="col">
                            <div class="card">
                                <div class="card-body" style="min-height: 496px">
                                    <h3 class="mb-4">Upcoming Events</h3>
                                    @await Component.InvokeAsync(typeof(EventsAreaViewComponent), new
                                    {
                                        minDate = Clock.Now.ClearTime(),
                                        registeredUserId = Model.User.Id,
                                        maxResultCount = 6,
                                        skipCount = 0,
                                    })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>