@page "/organizations/{name}"
@inject IHtmlLocalizer<EventHubResource> L
@using EventHub.Localization
@using EventHub.Web.Pages.Events.Components.EventsArea
@using EventHub.Web.Pages.Organizations.Components.JoinArea
@using EventHub.Web.Pages.Organizations.Components.MembersArea
@using Microsoft.AspNetCore.Mvc.Localization
@using Volo.Abp.Timing
@model EventHub.Web.Pages.Organizations.ProfilePageModel
@inject IClock Clock

@section scripts {
    <abp-script src="/Pages/Organizations/Profile.js"/>
}

<div class="bg-white py-5">
    <div class="container detail-page pb-4">
        <div class="row">
            <div class="col-md-12">
                <div class="detail-image">
                    @if (Model.Organization.ProfilePictureContent == null)
                    {
                        <img src="/assets/org-detail-top.png" alt="@Model.Organization.Name">
                    }
                    else
                    {
                        <img src="@($"data:image/png;base64,{Convert.ToBase64String(Model.Organization.ProfilePictureContent)}")" alt="@Model.Organization.Name">
                    }
                </div>
            </div>


            <div class="col-12 mt-4">
                <ul class="nav nav-tabs profile-nav" id="myTab">
                    <li class="nav-item">
                        <a href="#about-organization-section" class="nav-link active" data-toggle="tab">About the Organization</a>
                    </li>
                    <li class="nav-item">
                        <a href="#events-section" class="nav-link" data-toggle="tab">Events</a>
                    </li>
                    <li class="nav-item">
                        <a href="#members-section" class="nav-link" data-toggle="tab">Members</a>
                    </li>
                </ul>

                <div class="tab-content py-4">
                    <div id="about-organization-section" class="tab-pane fade show active">
                        <div class="row">
                            <div class="col-md-7">
                                <h5 class="detail-head mt-3 font-weight-bold">@Model.Organization.DisplayName</h5>
                                <p>
                                    @Model.Organization.Description
                                </p>
                            </div>
                            <div class="col-md-5">
                                <h5 class="detail-head mt-3 font-weight-bold">Owners</h5>
                                <div>
                                    <img gravatar-email="@Model.Organization.OwnerEmail" default-image="Wavatar" gravatar-size="60" class="org-avatar avatar rounded-circle" data-toggle="tooltip" title="" data-original-title="@Model.Organization.OwnerUserName"/>
                                </div>

                                @if (Model.IsOrganizationOwner)
                                {
                                    <a href="/organization/edit/@Model.Organization.Name" class="btn btn-primary mt-4 text-white">
                                        <i class="far fa-edit"></i> Edit
                                    </a>
                                }
                                @await Component.InvokeAsync(typeof(JoinAreaViewComponent), new {organizationId = Model.Organization.Id})
                                @await Component.InvokeAsync(typeof(MembersAreaViewComponent), 
                                    new
                                    {
                                        organizationId = Model.Organization.Id, 
                                        isPagination = true,
                                        maxResultCount = 15
                                    })
                                
                                <h5 class="detail-head mt-5 font-weight-bold">Share Organizations</h5>
                                <div class="share-container">
                                    <a href="https://twitter.com/@Model.Organization.TwitterUsername">
                                        <img src="/assets/twitter2.svg">
                                    </a>
                                    @* ToDo: Social Links *@
                                    <a href="https://www.linkedin.com/in/@Model.Organization.Website">
                                        <img src="/assets/in2.svg">
                                    </a>
                                    <a href="https://www.facebook.com/@Model.Organization.FacebookUsername">
                                        <img src="/assets/facebook2.png">
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="events-section" class="tab-pane fade">
                        <div class="row mb-4">
                            <div class="col-md">
                            </div>
                            <div class="col-md-auto">
                                <div class="list-style">
                                    <ul class="nav nav-pills events" role="tablist">
                                        <li class="nav-item">
                                            <a href="#PastEvent" class="selected" data-toggle="tab"><img src="/assets/past.svg"> Past</a>
                                        </li>
                                        <li class="nav-item">
                                            <a href="#UpcomingEvent" data-toggle="tab"><img src="/assets/now.svg"> Upcoming</a>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                        <div class="tab-content">
                            <div id="PastEvent" class="tab-pane active">
                                @await Component.InvokeAsync(typeof(EventsAreaViewComponent), new
                                {
                                    organizationId = Model.Organization.Id,
                                    maxDate = Clock.Now.ClearTime()
                                })
                            </div>
                            <div id="UpcomingEvent" class="tab-pane">
                                @await Component.InvokeAsync(typeof(EventsAreaViewComponent), new
                                {
                                    organizationId = Model.Organization.Id,
                                    minDate = Clock.Now.ClearTime()
                                })
                            </div>
                        </div>
                    </div>
                    <div id="members-section" class="tab-pane fade">
                        @await Component.InvokeAsync(typeof(MembersAreaViewComponent), 
                            new
                            {
                                organizationId = Model.Organization.Id, 
                                isPagination = true,
                                maxResultCount = 18,
                                isMoreDetail = true
                            })
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>